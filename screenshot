#!/usr/bin/python2
# This file is part of GtkGrab.
#
# GtkGrab is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# GtkGrab is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GtkGrab.  If not, see <http://www.gnu.org/licenses/>.
#
# @category   GtkGrab
# @license    http://www.gnu.org/licenses/gpl-3.0.txt GPL
# @copyright  Copyright 2010-2013 Evan Coury (http://www.Evan.pro/)
# @copyright  Copyright 2010-2013 Pieter Kokx (http://kokx.nl/)
# @package    Client

import ConfigParser, sys, urllib2, os, base64, hashlib, time

config = ConfigParser.ConfigParser()
config.readfp(open(os.path.dirname(sys.argv[0]) + '/config.cfg'))

user = config.get('GtkGrab','username')
token = config.get('GtkGrab','password')
postURL = config.get('GtkGrab','posturl')
command = config.get('GtkGrab','command')

path = '/tmp/ss.png'
os.system(command.replace("%p", path))
os.system('convert '+path+' \( +clone -background black -shadow 60x5+10+10 \) +swap -background none -layers merge +repage '+path)

# encode the screenshot with base64
data = base64.b64encode(open(path, 'r').read())

# hash the data with the user's secret token and send that as header
hash = hashlib.sha1()

hash.update(data)
hash.update(token)

headers = { 'X-Username': user, 'X-Signature': hash.hexdigest(), 'Content-Type': 'text/xml' }

# upload the url and give the screenshot url to the user
url = urllib2.urlopen(urllib2.Request(postURL, data, headers)).read();
os.remove(path)

os.system('echo -n "' + url + '" | xclip -selection c')
os.system('notify-send --hint=int:transient:1 "Screenshot Uploaded" "Copied URL to clipboard: ' + "\n" + url + '"')
